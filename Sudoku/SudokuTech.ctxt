#BlueJ class context
comment0.params=
comment0.target=SudokuTech()
comment1.params=
comment1.target=void\ formatieren()
comment10.params=x\ y\ Wert
comment10.target=boolean\ istEinzigeMoeglichkeitReihe(int,\ int,\ int)
comment11.params=x\ y\ Wert
comment11.target=boolean\ istEinzigeMoeglichkeitSpalte(int,\ int,\ int)
comment12.params=x\ y\ Wert
comment12.target=boolean\ istEinzigeMoeglichkeitQuadrat(int,\ int,\ int)
comment13.params=x\ y\ Wert
comment13.target=boolean\ istEinzigeMoeglichkeit(int,\ int,\ int)
comment14.params=
comment14.target=void\ M\u00F6glicheZahlen()
comment15.params=
comment15.target=boolean\ istGeloest()
comment16.params=
comment16.target=void\ loesen()
comment17.params=W1\ W2\ W3\ W4\ W5\ W6\ W7\ W8\ W9
comment17.target=void\ Input(int,\ int,\ int,\ int,\ int,\ int,\ int,\ int,\ int)
comment18.params=Zeile\ Werte
comment18.target=void\ InputZeile(int,\ int)
comment19.params=
comment19.target=void\ anzeigenGrafik()
comment19.text=\r\n\ \ \ \ void\ anzeigen()\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ System.out.println("Sudoku\:");\r\n\ \ \ \ \ \ \ \ System.out.println(""+Feld[0][0]+""+""+Feld[0][1]+""+""+Feld[0][2]+""+""+Feld[0][3]+""+""+Feld[0][4]+""+""+Feld[0][5]+""+""+Feld[0][6]+""+""+Feld[0][7]+""+""+Feld[0][8]+"");\r\n\ \ \ \ \ \ \ \ System.out.println(""+Feld[1][0]+""+""+Feld[1][1]+""+""+Feld[1][2]+""+""+Feld[1][3]+""+""+Feld[1][4]+""+""+Feld[1][5]+""+""+Feld[1][6]+""+""+Feld[1][7]+""+""+Feld[1][8]+"");\r\n\ \ \ \ \ \ \ \ System.out.println(""+Feld[2][0]+""+""+Feld[2][1]+""+""+Feld[2][2]+""+""+Feld[2][3]+""+""+Feld[2][4]+""+""+Feld[2][5]+""+""+Feld[2][6]+""+""+Feld[2][7]+""+""+Feld[2][8]+"");\r\n\ \ \ \ \ \ \ \ System.out.println(""+Feld[3][0]+""+""+Feld[3][1]+""+""+Feld[3][2]+""+""+Feld[3][3]+""+""+Feld[3][4]+""+""+Feld[3][5]+""+""+Feld[3][6]+""+""+Feld[3][7]+""+""+Feld[3][8]+"");\r\n\ \ \ \ \ \ \ \ System.out.println(""+Feld[4][0]+""+""+Feld[4][1]+""+""+Feld[4][2]+""+""+Feld[4][3]+""+""+Feld[4][4]+""+""+Feld[4][5]+""+""+Feld[4][6]+""+""+Feld[4][7]+""+""+Feld[4][8]+"");\r\n\ \ \ \ \ \ \ \ System.out.println(""+Feld[5][0]+""+""+Feld[5][1]+""+""+Feld[5][2]+""+""+Feld[5][3]+""+""+Feld[5][4]+""+""+Feld[5][5]+""+""+Feld[5][6]+""+""+Feld[5][7]+""+""+Feld[5][8]+"");\r\n\ \ \ \ \ \ \ \ System.out.println(""+Feld[6][0]+""+""+Feld[6][1]+""+""+Feld[6][2]+""+""+Feld[6][3]+""+""+Feld[6][4]+""+""+Feld[6][5]+""+""+Feld[6][6]+""+""+Feld[6][7]+""+""+Feld[6][8]+"");\r\n\ \ \ \ \ \ \ \ System.out.println(""+Feld[7][0]+""+""+Feld[7][1]+""+""+Feld[7][2]+""+""+Feld[7][3]+""+""+Feld[7][4]+""+""+Feld[7][5]+""+""+Feld[7][6]+""+""+Feld[7][7]+""+""+Feld[7][8]+"");\r\n\ \ \ \ \ \ \ \ System.out.println(""+Feld[8][0]+""+""+Feld[8][1]+""+""+Feld[8][2]+""+""+Feld[8][3]+""+""+Feld[8][4]+""+""+Feld[8][5]+""+""+Feld[8][6]+""+""+Feld[8][7]+""+""+Feld[8][8]+"");\r\n\ \ \ \ }\r\n
comment2.params=x\ y
comment2.target=int\ getQuadrat(int,\ int)
comment20.params=
comment20.target=void\ loeschen()
comment21.params=
comment21.target=void\ potZahlen()
comment21.text=void\ SudokuErstellen()\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ int\ g\=0;\r\n\ \ \ \ \ \ \ \ while(\!istGeloest())\r\n\ \ \ \ \ \ \ \ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ for\ (int\ x\=0;x<9;x++)\r\n\ \ \ \ \ \ \ \ \ \ \ \ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ for(int\ y\=0;y<9;y++)\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (Feld[y][x][0]\=\=0)\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ while\ (\!istEinzige(x,y,g))\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ g\=(int)(Math.random()*9)+1;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Feld[y][x][0]\=g;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ formatieren();\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ }\r\n}
comment22.params=x\ y
comment22.target=void\ potZahlenSpalte(int,\ int)
comment23.params=x\ y\ Wert
comment23.target=boolean\ isPotLeftSpalte(int,\ int,\ int)
comment24.params=x\ y
comment24.target=void\ potZahlenReihe(int,\ int)
comment25.params=x\ y\ Wert
comment25.target=boolean\ isPotLeftReihe(int,\ int,\ int)
comment3.params=x\ y
comment3.target=int\ getposQuadrat(int,\ int)
comment4.params=q\ p
comment4.target=int\ xQuadrat(int,\ int)
comment5.params=q\ p
comment5.target=int\ yQuadrat(int,\ int)
comment6.params=x\ y\ Wert
comment6.target=boolean\ istEinzigeReihe(int,\ int,\ int)
comment7.params=x\ y\ Wert
comment7.target=boolean\ istEinzigeSpalte(int,\ int,\ int)
comment8.params=x\ y\ Wert
comment8.target=boolean\ istEinzigeQuadrat(int,\ int,\ int)
comment9.params=x\ y\ Wert
comment9.target=boolean\ istEinzige(int,\ int,\ int)
numComments=26
